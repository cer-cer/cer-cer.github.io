{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Setup mkdocs in MacOS with theme and extension","text":""},{"location":"#setup-python-enviroment","title":"Setup Python enviroment","text":"<p>Since the mkdocs is coded by Python, so you have to set up the python env first. Currently the mkdocs's verison is 2.16, it is supproted by python 3.8+.</p> <p>It's so diffcult to a C deeloper.</p> <ul> <li>First, you should install python in MacOS.<ul> <li>It's not friendly in MacOS, since it was already have one python but with a lower version.</li> <li>you could install the new version by <code>Brew</code>, you could retrie the detail by Brew offical.</li> </ul> </li> <li>Second, after installed the python by brew, you could check it by command <code>brew list | grep python</code>.<ul> <li>And you could also find the detail by <code>brew list python</code>. which will display the install path.</li> </ul> </li> </ul> <pre><code>python\npython-setuptools\npython@3.11\npython@3.13\n</code></pre> <ul> <li>After that, unfounture, you still saw the old version python by MacOS. this is because the <code>PATH</code> can't get the new python. You could replace the old version python by system <code>alias</code> in your bash profile.</li> </ul> <p>I added this in the <code>.bash_profile</code>, which will be executed when terminate opened.</p> <pre><code>alias python=python3\nalias pip=pip3\n</code></pre> <ul> <li>You could check your python version, which will display the newest vesion which you installed by brew.</li> </ul>"},{"location":"#setup-python-virtual-env","title":"Setup python virtual env.","text":"<ul> <li>Install the pipenv by brew. This step is simple.</li> </ul>"},{"location":"#setup-mkdocs","title":"Setup mkdocs.","text":"<p>We will install the mkdocs by python virtual env, which will isolate the python package for every project.</p> <ul> <li>Create a new directory for your new project. like <code>mkdir testPrj</code>.</li> <li>Enter this new directory, and then initliazation the python virtual env by command <code>cd testPrj &amp; pipenv shell</code>.</li> <li>Install mkdocs in virtual env by command <code>pipenv install mkdocs</code>.</li> </ul>"},{"location":"#initlization-the-mkdocs-project","title":"Initlization the <code>mkdocs</code> project.","text":"<ul> <li>Run command <code>mkdocs new .</code>. the <code>.</code> means current directory.</li> <li>Run command <code>mkdocs serve</code>, then you could see the output that new project is running. Open the browser to check the wiki page. The url you could get by the output, like <code>http://127.0.0.1:8000/</code>.</li> </ul>"},{"location":"#install-theme","title":"Install theme.","text":"<ul> <li>Go to mkdocs-material offical, you could get the <code>install</code>. but don't forget to replace the <code>pip</code> command by <code>pipenv</code>.</li> <li>Run <code>pipenv install mkdocs-material</code>.</li> <li>Config the <code>mkdocs.yml</code>.</li> </ul>"},{"location":"#install-markdown_krokis","title":"Install markdown_krokis","text":"<ul> <li>Same with <code>theme</code>, you MUST install the <code>markdown_kroki</code> first. I use this extension since i want to test the <code>plantuml</code> by it.</li> </ul>"},{"location":"#example","title":"Example","text":""},{"location":"vs/common_ui_partner_vs/","title":"\u5e38\u7528UI\u7ec4\u4ef6\u6bd4\u8f83(iOS/Android/Flutter/QT)","text":"<p>\u672c\u6587\u7528\u6765\u6bd4\u8f83ios/Android/flutter/qt\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u5e38\u7528\u7684\u51e0\u79cd\u7ec4\u4ef6\u3002\u5305\u62ecUI\u7684\u5e03\u5c40\u548c\u6e32\u67d3\uff0cUI\u751f\u547d\u5468\u671f\uff0c\u591a\u7ebf\u7a0b\u7684\u652f\u6301\uff0c\u4e8b\u4ef6\u7684\u5206\u53d1\uff0c\u5185\u5b58\u7ba1\u7406\u7b49\u3002</p> <p>\u56e0\u4e3aiOS/Android/flutter/qt \u90fd\u662f\u6d89\u53caUI\u5904\u7406\u7684\u7ec4\u4ef6\uff0c\u5b83\u4eec\u57fa\u672c\u90fd\u6d89\u53ca\u8fd9\u4e9b\u90e8\u5206\u3002\u5f53\u7136\uff0c\u5bf9\u4e8eiOS/Android\u6765\u8bf4\uff0c\u4ed6\u4eec\u662f\u7cfb\u7edf\u7684native\u5f00\u53d1\uff0c\u5305\u542b\u66f4\u5e7f\u6cdb\u7684\u7ec4\u4ef6\u3002\u800cflutter/qt\uff0c\u66f4\u591a\u805a\u7126\u5728\u8de8\u5e73\u53f0\u7684UI\u5904\u7406\u3002</p>"},{"location":"vs/common_ui_partner_vs/#ui","title":"UI \u5e03\u5c40\u548c\u6e32\u67d3","text":"<p>\u53ea\u8981\u662fUI\u5e93\uff0c\u90fd\u6d89\u53caUI\u7684\u5e03\u5c40\u548c\u6e32\u67d3\u3002\u5bf9\u4e8enative\u5f00\u53d1\u6765\u8bf4\uff0c\u6e32\u67d3\u8fc7\u7a0b\u548c\u7cfb\u7edf\u6709\u7d27\u5bc6\u7684\u5173\u7cfb\u3002\u800c\u8de8\u5e73\u53f0\u7684\u7b2c\u4e09\u65b9\u7ec4\u4ef6\uff0c\u4ed6\u4eec\u6216\u4f7f\u7528\u81ea\u5df1\u7684\u6e32\u67d3\u7ec4\u4ef6\uff0c\u6216\u5c01\u88c5\u4e86native\u7684\u6e32\u67d3api\u3002</p> <p>\u672c\u90e8\u5206\u5bf9\u5176\u5206\u522b\u63cf\u8ff0\u548c\u6bd4\u8f83\u3002</p>"},{"location":"vs/common_ui_partner_vs/#ios","title":"iOS","text":"<p>iOS\u672c\u8eabnative\u7684\u5f00\u53d1\u65b9\u5f0f\uff0c\u6765\u63cf\u8ff0iOS\u672c\u8eab\u7684\u5e03\u5c40\u8fc7\u7a0b\u548c\u6e32\u67d3\u8fc7\u7a0b\u3002</p>"},{"location":"vs/common_ui_partner_vs/#_1","title":"\u5e03\u5c40\u8fc7\u7a0b","text":"<p>iOS\u7684\u5e03\u5c40\u6709\u591a\u79cd\u65b9\u5f0f\uff0c\u5305\u62ec\u4ee5frame\u8bbe\u7f6e\uff0c\u4ee5autoresizing, \u4ee5autolayout\u3002</p> <p>\u76ee\u524d\u91c7\u7528autolayout\u548cframe\u8bbe\u7f6e\uff0c\u662f\u6bd4\u8f83\u6d41\u884c\u7684\u65b9\u5f0f\u3002\u4e2a\u4eba\u89c9\u5f97\uff0c\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u4f7f\u7528autoresizing\uff0c\u4ee3\u7801\u4f1a\u66f4\u7b80\u6d01\uff0c\u66f4\u4fbf\u6377\u3002</p> <p>\u8fd9\u4e09\u79cd\u65b9\u5f0f\u5747\u53ef\u4ee5\u6309\u7167\u5f00\u53d1\u4eba\u5458\u7684\u9700\u8981\uff0c\u6df7\u5408\u5f00\u53d1\u3002\u4e0d\u8fc7\u5fc5\u987b\u7406\u89e3\u7684\u662f\uff0cautolayout\u4e00\u65e6\u4f7f\u7528\uff0cframe\u8bbe\u7f6e\u5c06\u5728layout\u8ba1\u7b97\u65f6\u65e0\u6548\u3002</p> <p>iOS\u7684\u5e03\u5c40\u56de\u8c03\u6bd4\u8f83\u7b80\u5355\uff0c\u5f53parent view frame\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u4f1a\u8c03\u7528 <code>layoutSubviews</code>. \u6240\u4ee5\u5f53\u8fd9\u4e2a\u56de\u8c03\u88ab\u8c03\u7528\u65f6\uff0c\u5f53\u524dframe\u53ef\u80fd\u4f1a0.</p>"},{"location":"vs/common_ui_partner_vs/#_2","title":"\u89e6\u53d1\u5e03\u5c40\u7684\u65b9\u6cd5","text":"<ul> <li><code>setNeedsLayout</code></li> <li><code>layoutIfNeeded</code></li> </ul> <p>\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u533a\u522b\u662f:</p> <p><code>setNeedsLayout</code> \u4f1a\u5728\u4e0b\u4e00\u4e2a\u6d88\u606f\u5faa\u73af\u4e2d\u68c0\u67e5\u5e76\u6267\u884c\u3002</p> <pre><code>Invalidates the current layout of the receiver and triggers a layout update during the next update cycle.\n</code></pre> <p><code>layoutIfNeeded</code> \u4f1a\u9a6c\u4e0a\u68c0\u67e5\u662f\u5426\u9700\u8981\u91cd\u65b0\u5e03\u5c40.</p> <pre><code>Updates the layout of views in the window based on the current views and constraints.\n\nBefore displaying a window that uses constraints-based layout the system invokes this method to ensure that the layout of all views is up to date. This method updates the layout if needed, first invoking updateConstraintsIfNeeded to ensure that all constraints are up to date. This method is called automatically by the system, but may be invoked manually if you need to examine the most up to date layout.\n</code></pre>"},{"location":"vs/common_ui_partner_vs/#_3","title":"\u6e32\u67d3\u8fc7\u7a0b","text":"<p>iOS\u7684\u6e32\u67d3\u56de\u8c03\u4e5f\u540c\u6837\u6bd4\u8f83\u7b80\u5355\uff0c\u552f\u4e00\u8c03\u7528\u7684\u65b9\u6cd5\u662f <code>drawRect</code>.</p> <p><code>func draw(_ rect: CGRect)</code></p> <pre><code>The default implementation of this method does nothing. Subclasses that use technologies such as Core Graphics and UIKit to draw their view\u2019s content should override this method and implement their drawing code there. You do not need to override this method if your view sets its content in other ways. For example, you do not need to override this method if your view just displays a background color or if your view sets its content directly using the underlying layer object.\n</code></pre>"},{"location":"vs/common_ui_partner_vs/#_4","title":"\u89e6\u53d1\u6e32\u67d3\u7684\u65b9\u6cd5","text":"<p>iOS\u4e2d\u89e6\u53d1view\u5237\u65b0\u7684\u65b9\u6cd5\u6709\u4e24\u79cd\uff1a</p> <p><code>func setNeedsDisplay()</code> \u8be5\u65b9\u6cd5\u4f1a\u5728\u4e0b\u4e00\u4e2a\u7ed8\u5236\u5faa\u73af\u4e2d\uff0c\u6267\u884cview\u7684\u5237\u65b0\u64cd\u4f5c.</p> <pre><code>You can use this method or the setNeedsDisplay(_:) to notify the system that your view\u2019s contents need to be redrawn. This method makes a note of the request and returns immediately. The view is not actually redrawn until the next drawing cycle, at which point all invalidated views are updated.\n</code></pre> <p><code>func setNeedsDisplay(_ rect: CGRect)</code></p>"},{"location":"vs/common_ui_partner_vs/#android","title":"Android","text":""},{"location":"vs/common_ui_partner_vs/#_5","title":"\u5e03\u5c40\u8fc7\u7a0b","text":"<p>Android\u7684\u5e03\u5c40\u548ciOS\u6bd4\u8d77\u6765\u6bd4\u8f83\u590d\u6742\u3002\u5176\u4e3b\u8981\u5305\u62ec\u4e24\u4e2a\u8fc7\u7a0b: <code>onMeasure</code> \u548c <code>onLayout</code>.</p> <ul> <li><code>onMeasure</code>, \u786e\u5b9aview\u7684\u5927\u5c0f.</li> <li><code>onLayout</code>, \u786e\u5b9aview\u7684\u4f4d\u7f6e\u3002</li> </ul> <p></p>"},{"location":"vs/common_ui_partner_vs/#measure","title":"Measure","text":"<p>Android\u7684measure\u8fc7\u7a0b\uff0c\u5927\u81f4\u53ef\u4ee5\u8ba4\u4e3a\u662fparent view\u8bbe\u7f6e measure spec\uff0cchildren view \u54cd\u5e94\u5e76\u8bbe\u7f6e\u81ea\u8eabmeasure\u7684\u8fc7\u7a0b\u3002</p> <p></p> <p>void onMeasure (int widthMeasureSpec,                  int heightMeasureSpec)</p> <p>\u8fd9\u91cc\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u56de\u8c03\u51fd\u6570 <code>onMeasure</code>. <code>onMeasure</code> \u8fc7\u7a0b\u5c31\u662f\u6839\u636emeasure spec\uff0c\u8bbe\u7f6e\u672cview\u7684\u5927\u5c0f\u7684\u8fc7\u7a0b\u3002 \u6839\u636eAPI\u6587\u6863\uff0c\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u8c03\u7528<code>setMeasuredDimension</code>\u8bbe\u7f6e measured dimension\u3002\u8fd9\u4e5f\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u76ee\u7684\u3002</p> <pre><code>CONTRACT: When overriding this method, you must call setMeasuredDimension(int, int) to store the measured width and height of this view. \n</code></pre> <p>measure spec \u662f\u4e00\u4e2a32\u4f4d\u6574\u5f62\uff0c \u524d2\u4f4d\u8868\u793aspec(\u7528<code>View.MeasureSpec.getMode</code>\u83b7\u53d6)\uff0c\u540e30\u4f4d\u4e3a\u5efa\u8bae\u7684\u5927\u5c0f(<code>View.MeasureSpec.getSize</code>)\u3002</p>"},{"location":"vs/common_ui_partner_vs/#layout","title":"Layout","text":"<p>layout\u57fa\u672c\u5c31\u662f\u4f7f\u7528measure\u8fc7\u7a0b\u7684\u5927\u5c0f\uff0c\u5e03\u5c40\u5404\u4e2achild view\u3002</p> <p></p>"},{"location":"vs/common_ui_partner_vs/#_6","title":"\u6e32\u67d3\u8fc7\u7a0b","text":""},{"location":"vs/common_ui_partner_vs/#flutter","title":"Flutter","text":"<p>Flutter\u7684\u5e03\u5c40\u548c\u6e32\u67d3\u662f\u6709renderObject\u4e3b\u5bfc\u7684\u3002element\u5728flutter\u4e2d\uff0c\u53ea\u8d77\u5230\u4e00\u4e2a\u5efa\u7acbrender tree\u548c\u6807\u5fd7widget\u4f4d\u7f6e\u7684\u4f5c\u7528\u3002</p>"},{"location":"vs/common_ui_partner_vs/#_7","title":"\u5e03\u5c40\u8fc7\u7a0b","text":"<p>Flutter \u5e03\u5c40\u8fc7\u7a0b\u575a\u6301\u4e00\u4e2a\u539f\u5219\uff1achildren\u8d1f\u8d23\u8ba1\u7b97\u81ea\u5df1\u7684\u5927\u5c0f\uff0cparent\u8d1f\u8d23children\u7684\u4f4d\u7f6e\u3002\u6bcf\u4e00\u4e2achildren\u7684\u4f4d\u7f6e\u4fe1\u606f\u5b58\u653e\u5728parentData(<code>BoxParentData</code>)\u4e2d\uff0c\u8fd9\u662f\u4e00\u4e2ainherit widget\u3002</p> <p>\u5bf9\u4e8e2d\u63a7\u4ef6\u6765\u8bf4\uff0c renderBox\u8d1f\u8d23\u5404\u4e2a\u63a7\u4ef6\u7684layout\u8fc7\u7a0b\u3002</p> <p></p>"},{"location":"vs/common_ui_partner_vs/#_8","title":"\u6e32\u67d3\u8fc7\u7a0b","text":"<p>flutter\u4e2d\uff0crenderobject\u8d1f\u8d23\u6e32\u67d3\u3002\u6d89\u53ca\u6e32\u67d3\u7684\u5176\u5b83\u7c7b\u5305\u62ec\uff1a</p> <ul> <li>Canvas: \u5c01\u88c5\u4e86skia\u7684\u7ed8\u5236\u64cd\u4f5c\uff0c\u5b83\u5728API\u6587\u6863\u4e2d\u7684\u5b9a\u4e49\u662f\uff1a</li> </ul> <pre><code>An interface for recording graphical operations.\n</code></pre> <ul> <li>Layer: \u753b\u5e03\u3002\u5305\u62ec\u7ed8\u5236\u4ea7\u7269\u548c\u5bb9\u5668\u7c7b\u4ea7\u7269.</li> <li>PictureLayer: \u7ed8\u5236\u4ea7\u7269\uff0clayer tree\u4e2d\u7684\u53f6\u5b50\u7ed3\u70b9\u3002\u4ea7\u751f\u4e00\u4e2a\u6700\u7ec8\u7684 <code>Picture</code> \u5bf9\u8c61\u3002\u8be5\u5bf9\u8c61\u7528\u4e8e<code>Scene</code> \u7684\u6e32\u67d3\u3002</li> <li>ContainerLayer: \u5bb9\u5668layer\uff0c\u5305\u542b\u591a\u4e2achild layer\u3002</li> <li>Scene: \u6700\u7ec8\u5411\u5c4f\u5e55\u7ed8\u5236\u7684\u4ea7\u7269\u3002<code>Scene objects can be displayed on the screen using the FlutterView.render method.</code></li> </ul>"},{"location":"vs/common_ui_partner_vs/#_9","title":"\u6e32\u67d3\u7c7b\u5173\u7cfb\u56fe","text":""},{"location":"vs/common_ui_partner_vs/#qt","title":"QT","text":"<p>\u5bf9\u4e8eqt\u7684\u5e03\u5c40\u8fc7\u7a0b\u548c\u6e32\u67d3\u8fc7\u7a0b\uff0c\u672a\u77e5\uff0c\u9700\u8981dive deep\u3002</p>"},{"location":"vs/common_ui_partner_vs/#ui_1","title":"UI\u751f\u547d\u5468\u671f","text":""},{"location":"vs/common_ui_partner_vs/#ios-ui","title":"iOS UI \u751f\u547d\u5468\u671f","text":"<p>iOS UI\u58f0\u660e\u5468\u671f\u5305\u62ec\u4e24\u79cd\uff0c \u4e00\u79cd\u4e3aview controller\u81ea\u8eabappear\u548cdisappear\u7684\u8fc7\u7a0b\u3002 \u53e6\u4e00\u79cd\u662fview\u81ea\u8eab\u7684appear\u548cdisappear\u8fc7\u7a0b\u3002</p>"}]}