{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"About Me","text":"<p>A old coder with ...</p> <ul> <li>iOS more than 10 years.</li> <li>Android more than 5 projects...</li> <li>C/C++ more than 8 years (QT).</li> </ul> <p>I'd like to summarize what I have learned and record it...</p> <p>My Email: 2151636@qq.com, please feel free to contact me if i can help you or i have any mistake, Thanks!</p>"},{"location":"flutter/","title":"Flutter Knowleage","text":"<ul> <li>Flutter animation classes relation diagram</li> <li>Flutter render classes relation diagram</li> </ul>"},{"location":"mac/","title":"Mac issue...","text":"<ul> <li>The thinking of macos rpath</li> </ul>"},{"location":"flutter/animation/","title":"Animation","text":""},{"location":"flutter/animation/#ticker","title":"Ticker","text":"<p>All the animation is triggered by ticker. Flutter widget could get a ticker by <code>mixin</code> <code>SingleTickerProviderStateMixin</code> or <code>TickerProviderStateMixin</code>.</p> <p>The animation will run in a duration. And the ticket will dirve the this duration.</p>"},{"location":"flutter/animation/#value","title":"Value","text":"<p>The animation has a start value and end value. <code>AnimationController</code> will product a value with current <code>duration</code> which drived by the <code>ticker</code>. By default, the start value is 0, and end is <code>1.0</code>.</p> <p>The value will be producted by <code>Animation</code>'s value, developer could add listener by <code>addListener</code>to monitor the value's change, meanwhile, also could monitor the animation's status.</p>"},{"location":"flutter/animation/#tween","title":"Tween","text":"<p>Since the <code>AnimationController</code> only prodct a <code>double</code> interploate value, so we need other class to product a value could be apply to the widget.</p> <p><code>Tween</code> will product differet types' value, like <code>int</code>, <code>color</code>, <code>decoration</code>...The <code>Tween</code> product a <code>interpolating</code> value which could generate an animation by <code>animate</code> method.</p>"},{"location":"flutter/animation/#curve","title":"Curve","text":"<p>Since the top class which mentioned just product a linear value, so we need <code>Curve</code> to create a <code>Curve</code> value.</p> <p>Developer could use the <code>CurvedAnimation</code> to bind a <code>AnimationController</code> to generate <code>animation</code> which could listen value's change, or use <code>CurveTween</code> to bind a <code>Tween</code> to product a animatable value which will generate animation's by <code>animation</code> method.</p>"},{"location":"flutter/render_flow/","title":"Render flow","text":"<pre><code>To composite the tree, create a ui.SceneBuilder object using RendererBinding.createSceneBuilder,&lt;br&gt; pass it to the root Layer object's addToScene method, and then call ui.SceneBuilder.build to obtain a ui.Scene.&lt;br&gt; A ui.Scene can then be painted using ui.FlutterView.render.\n</code></pre>"},{"location":"mac/mac_rpath/","title":"The thinking of macos rpath","text":""},{"location":"mac/mac_rpath/#what-is-the-problem","title":"What is the problem?","text":"<p>I have tried to build the <code>ffmpeg</code> by configuration with a <code>--prefix=./lib</code>. After successful built, the <code>ffmpeg</code> can't work which have an error message.</p> <pre><code>  dyld[76564]: Library not loaded: ./lib/lib/libavdevice.61.dylib\n  Referenced from: &lt;0AAAE9DA-09B7-349A-990C-AD388AE54756&gt; /Users/xx/work/c/ffmpeg/build/lib/bin/ffmpeg\n  Reason: tried: './lib/lib/libavdevice.61.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS./lib/lib/libavdevice.61.dylib' (no such file), './lib/lib/libavdevice.61.dylib' (no such file)\nzsh: abort      ./ffmpeg\n</code></pre> <p>What is wrong with this buiding?</p>"},{"location":"mac/mac_rpath/#investigation","title":"Investigation","text":"<pre><code>% otool -l ffmpeg | grep libav    \n         name ./lib/lib/libavdevice.61.dylib (offset 24)\n         name ./lib/lib/libavfilter.10.dylib (offset 24)\n         name ./lib/lib/libavformat.61.dylib (offset 24)\n         name ./lib/lib/libavcodec.61.dylib (offset 24)\n         name ./lib/lib/libavutil.59.dylib (offset 24)\n</code></pre> <pre><code>Load command 63\n          cmd LC_RPATH\n      cmdsize 32\n         path @rpath/../.. (offset 12)\n</code></pre>"},{"location":"mac/mac_rpath/#solution","title":"Solution","text":""},{"location":"mac/mac_rpath/#rootcause","title":"Rootcause","text":"<p>The search path have't lib.</p>"},{"location":"mac/mac_rpath/#implementation","title":"Implementation","text":"<ul> <li>Change the lib rpath</li> </ul> <pre><code>install_name_tool -change ./lib/lib/libswresample.5.dylib @rpath/libswresample.5.dylib ffmpeg\n</code></pre> <ul> <li>Add find path with executed file</li> </ul> <p>It is better that add a rpath by the loader path, which means the lib/executable load path. There is a document which about the detail. Understanding dyld @executable_path, @loader_path and @rpath</p> <pre><code>install_name_tool -add_rpath @loader_path/../lib ffmpeg\n</code></pre> <p>Let's explain the executable_path / loader_path / rpath in a short message.   - executable_path, the executable file's directory.   - loader_path, the directory not only the executable file but also the dynamic lib when it loaded.   - rpath, A path that help the macos to find the lib saving direcotry.</p> <ul> <li>The result after changes.</li> </ul> <pre><code>% otool -l ffmpeg | grep libav \n         name @rpath/libavdevice.61.dylib (offset 24)\n         name @rpath/libavfilter.10.dylib (offset 24)\n         name @rpath/libavformat.61.dylib (offset 24)\n         name @rpath/libavcodec.61.dylib (offset 24)\n         name @rpath/libavutil.59.dylib (offset 24)\n</code></pre> <pre><code>Load command 63\n          cmd LC_RPATH\n      cmdsize 24\n         path @loader_path/../lib (offset 12)\n</code></pre> <p>It's working..</p>"},{"location":"mkdoc/setup_mkdocs/","title":"Setup mkdocs in MacOS with theme and extension","text":""},{"location":"mkdoc/setup_mkdocs/#setup-python-enviroment","title":"Setup Python enviroment","text":"<p>Since the mkdocs is coded by Python, so you have to set up the python env first. Currently the mkdocs's verison is 2.16, it is supproted by python 3.8+.</p> <p>It's so diffcult to a C deeloper.</p> <ul> <li>First, you should install python in MacOS.<ul> <li>It's not friendly in MacOS, since it was already have one python but with a lower version.</li> <li>you could install the new version by <code>Brew</code>, you could retrie the detail by Brew offical.</li> </ul> </li> <li>Second, after installed the python by brew, you could check it by command <code>brew list | grep python</code>.<ul> <li>And you could also find the detail by <code>brew list python</code>. which will display the install path.</li> </ul> </li> </ul> <pre><code>python\npython-setuptools\npython@3.11\npython@3.13\n</code></pre> <ul> <li>After that, unfounture, you still saw the old version python by MacOS. this is because the <code>PATH</code> can't get the new python. You could replace the old version python by system <code>alias</code> in your bash profile.</li> </ul> <p>I added this in the <code>.bash_profile</code>, which will be executed when terminate opened.</p> <pre><code>alias python=python3\nalias pip=pip3\n</code></pre> <ul> <li>You could check your python version, which will display the newest vesion which you installed by brew.</li> </ul>"},{"location":"mkdoc/setup_mkdocs/#setup-python-virtual-env","title":"Setup python virtual env.","text":"<ul> <li>Install the pipenv by brew. This step is simple.</li> </ul>"},{"location":"mkdoc/setup_mkdocs/#setup-mkdocs","title":"Setup mkdocs.","text":"<p>We will install the mkdocs by python virtual env, which will isolate the python package for every project.</p> <ul> <li>Create a new directory for your new project. like <code>mkdir testPrj</code>.</li> <li>Enter this new directory, and then initliazation the python virtual env by command <code>cd testPrj &amp; pipenv shell</code>.</li> <li>Install mkdocs in virtual env by command <code>pipenv install mkdocs</code>.</li> </ul>"},{"location":"mkdoc/setup_mkdocs/#initlization-the-mkdocs-project","title":"Initlization the <code>mkdocs</code> project.","text":"<ul> <li>Run command <code>mkdocs new .</code>. the <code>.</code> means current directory.</li> <li>Run command <code>mkdocs serve</code>, then you could see the output that new project is running. Open the browser to check the wiki page. The url you could get by the output, like <code>http://127.0.0.1:8000/</code>.</li> </ul>"},{"location":"mkdoc/setup_mkdocs/#install-theme","title":"Install theme.","text":"<ul> <li>Go to mkdocs-material offical, you could get the <code>install</code>. but don't forget to replace the <code>pip</code> command by <code>pipenv</code>.</li> <li>Run <code>pipenv install mkdocs-material</code>.</li> <li>Config the <code>mkdocs.yml</code>.</li> </ul>"},{"location":"mkdoc/setup_mkdocs/#install-markdown_krokis","title":"Install markdown_krokis","text":"<ul> <li>Same with <code>theme</code>, you MUST install the <code>markdown_kroki</code> first. I use this extension since i want to test the <code>plantuml</code> by it.</li> </ul>"},{"location":"mkdoc/setup_mkdocs/#example","title":"Example","text":""},{"location":"vs/common_ui_partner_vs/","title":"\u5e38\u7528UI\u7ec4\u4ef6\u6bd4\u8f83(iOS/Android/Flutter/QT)","text":"<p>\u672c\u6587\u7528\u6765\u6bd4\u8f83ios/Android/flutter/qt\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u5e38\u7528\u7684\u51e0\u79cd\u7ec4\u4ef6\u3002\u5305\u62ecUI\u7684\u5e03\u5c40\u548c\u6e32\u67d3\uff0c\u591a\u7ebf\u7a0b\u7684\u652f\u6301\uff0c\u4e8b\u4ef6\u7684\u5206\u53d1\uff0c\u5185\u5b58\u7ba1\u7406\u7b49\u3002</p> <p>\u56e0\u4e3aiOS/Android/flutter/qt \u90fd\u662f\u6d89\u53caUI\u5904\u7406\u7684\u7ec4\u4ef6\uff0c\u5b83\u4eec\u57fa\u672c\u90fd\u6d89\u53ca\u8fd9\u4e9b\u90e8\u5206\u3002\u5f53\u7136\uff0c\u5bf9\u4e8eiOS/Android\u6765\u8bf4\uff0c\u4ed6\u4eec\u662f\u7cfb\u7edf\u7684native\u5f00\u53d1\uff0c\u5305\u542b\u66f4\u5e7f\u6cdb\u7684\u7ec4\u4ef6\u3002\u800cflutter/qt\uff0c\u66f4\u591a\u805a\u7126\u5728\u8de8\u5e73\u53f0\u7684UI\u5904\u7406\u3002</p>"},{"location":"vs/common_ui_partner_vs/#ui","title":"UI \u5e03\u5c40\u548c\u6e32\u67d3","text":"<p>\u53ea\u8981\u662fUI\u5e93\uff0c\u90fd\u6d89\u53caUI\u7684\u5e03\u5c40\u548c\u6e32\u67d3\u3002\u5bf9\u4e8enative\u5f00\u53d1\u6765\u8bf4\uff0c\u6e32\u67d3\u8fc7\u7a0b\u548c\u7cfb\u7edf\u6709\u7d27\u5bc6\u7684\u5173\u7cfb\u3002\u800c\u8de8\u5e73\u53f0\u7684\u7b2c\u4e09\u65b9\u7ec4\u4ef6\uff0c\u4ed6\u4eec\u6216\u4f7f\u7528\u81ea\u5df1\u7684\u6e32\u67d3\u7ec4\u4ef6\uff0c\u6216\u5c01\u88c5\u4e86native\u7684\u6e32\u67d3api\u3002</p> <p>\u672c\u90e8\u5206\u5bf9\u5176\u5206\u522b\u63cf\u8ff0\u548c\u6bd4\u8f83\u3002</p>"},{"location":"vs/common_ui_partner_vs/#ios","title":"iOS","text":"<p>iOS\u672c\u8eabnative\u7684\u5f00\u53d1\u65b9\u5f0f\uff0c\u6765\u63cf\u8ff0iOS\u672c\u8eab\u7684\u5e03\u5c40\u8fc7\u7a0b\u548c\u6e32\u67d3\u8fc7\u7a0b\u3002</p>"},{"location":"vs/common_ui_partner_vs/#_1","title":"\u5e03\u5c40\u8fc7\u7a0b","text":"<p>iOS\u7684\u5e03\u5c40\u6709\u591a\u79cd\u65b9\u5f0f\uff0c\u5305\u62ec\u4ee5frame\u8bbe\u7f6e\uff0c\u4ee5autoresizing, \u4ee5autolayout\u3002</p> <p>\u76ee\u524d\u91c7\u7528autolayout\u548cframe\u8bbe\u7f6e\uff0c\u662f\u6bd4\u8f83\u6d41\u884c\u7684\u65b9\u5f0f\u3002\u4e2a\u4eba\u89c9\u5f97\uff0c\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u4f7f\u7528autoresizing\uff0c\u4ee3\u7801\u4f1a\u66f4\u7b80\u6d01\uff0c\u66f4\u4fbf\u6377\u3002</p> <p>\u8fd9\u4e09\u79cd\u65b9\u5f0f\u5747\u53ef\u4ee5\u6309\u7167\u5f00\u53d1\u4eba\u5458\u7684\u9700\u8981\uff0c\u6df7\u5408\u5f00\u53d1\u3002\u4e0d\u8fc7\u5fc5\u987b\u7406\u89e3\u7684\u662f\uff0cautolayout\u4e00\u65e6\u4f7f\u7528\uff0cframe\u8bbe\u7f6e\u5c06\u5728layout\u8ba1\u7b97\u65f6\u65e0\u6548\u3002</p> <p>iOS\u7684\u5e03\u5c40\u56de\u8c03\u6bd4\u8f83\u7b80\u5355\uff0c\u5f53parent view frame\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u4f1a\u8c03\u7528 <code>layoutSubviews</code>. \u6240\u4ee5\u5f53\u8fd9\u4e2a\u56de\u8c03\u88ab\u8c03\u7528\u65f6\uff0c\u5f53\u524dframe\u53ef\u80fd\u4f1a0.</p>"},{"location":"vs/common_ui_partner_vs/#_2","title":"\u89e6\u53d1\u5e03\u5c40\u7684\u65b9\u6cd5","text":"<ul> <li><code>setNeedsLayout</code></li> <li><code>layoutIfNeeded</code></li> </ul> <p>\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u533a\u522b\u662f:</p> <p><code>setNeedsLayout</code> \u4f1a\u5728\u4e0b\u4e00\u4e2a\u6d88\u606f\u5faa\u73af\u4e2d\u68c0\u67e5\u5e76\u6267\u884c\u3002</p> <pre><code>Invalidates the current layout of the receiver and triggers a layout update during the next update cycle.\n</code></pre> <p><code>layoutIfNeeded</code> \u4f1a\u9a6c\u4e0a\u68c0\u67e5\u662f\u5426\u9700\u8981\u91cd\u65b0\u5e03\u5c40.</p> <pre><code>Updates the layout of views in the window based on the current views and constraints.\n\nBefore displaying a window that uses constraints-based layout the system invokes this method to ensure that the layout of all views is up to date. This method updates the layout if needed, first invoking updateConstraintsIfNeeded to ensure that all constraints are up to date. This method is called automatically by the system, but may be invoked manually if you need to examine the most up to date layout.\n</code></pre>"},{"location":"vs/common_ui_partner_vs/#_3","title":"\u6e32\u67d3\u8fc7\u7a0b","text":"<p>iOS\u7684\u6e32\u67d3\u56de\u8c03\u4e5f\u540c\u6837\u6bd4\u8f83\u7b80\u5355\uff0c\u552f\u4e00\u8c03\u7528\u7684\u65b9\u6cd5\u662f <code>drawRect</code>.</p> <p><code>func draw(_ rect: CGRect)</code></p> <pre><code>The default implementation of this method does nothing. Subclasses that use technologies such as Core Graphics and UIKit to draw their view\u2019s content should override this method and implement their drawing code there. You do not need to override this method if your view sets its content in other ways. For example, you do not need to override this method if your view just displays a background color or if your view sets its content directly using the underlying layer object.\n</code></pre>"},{"location":"vs/common_ui_partner_vs/#_4","title":"\u89e6\u53d1\u6e32\u67d3\u7684\u65b9\u6cd5","text":"<p>iOS\u4e2d\u89e6\u53d1view\u5237\u65b0\u7684\u65b9\u6cd5\u6709\u4e24\u79cd\uff1a</p> <p><code>func setNeedsDisplay()</code> \u8be5\u65b9\u6cd5\u4f1a\u5728\u4e0b\u4e00\u4e2a\u7ed8\u5236\u5faa\u73af\u4e2d\uff0c\u6267\u884cview\u7684\u5237\u65b0\u64cd\u4f5c.</p> <pre><code>You can use this method or the setNeedsDisplay(_:) to notify the system that your view\u2019s contents need to be redrawn. This method makes a note of the request and returns immediately. The view is not actually redrawn until the next drawing cycle, at which point all invalidated views are updated.\n</code></pre> <p><code>func setNeedsDisplay(_ rect: CGRect)</code></p>"},{"location":"vs/common_ui_partner_vs/#android","title":"Android","text":""},{"location":"vs/common_ui_partner_vs/#_5","title":"\u5e03\u5c40\u8fc7\u7a0b","text":"<p>Android\u7684\u5e03\u5c40\u548ciOS\u6bd4\u8d77\u6765\u6bd4\u8f83\u590d\u6742\u3002\u5176\u4e3b\u8981\u5305\u62ec\u4e24\u4e2a\u8fc7\u7a0b: <code>onMeasure</code> \u548c <code>onLayout</code>.</p> <ul> <li><code>onMeasure</code>, \u786e\u5b9aview\u7684\u5927\u5c0f.</li> <li><code>onLayout</code>, \u786e\u5b9aview\u7684\u4f4d\u7f6e\u3002</li> </ul> <p></p>"},{"location":"vs/common_ui_partner_vs/#measure","title":"Measure","text":"<p>Android\u7684measure\u8fc7\u7a0b\uff0c\u5927\u81f4\u53ef\u4ee5\u8ba4\u4e3a\u662fparent view\u8bbe\u7f6e measure spec\uff0cchildren view \u54cd\u5e94\u5e76\u8bbe\u7f6e\u81ea\u8eabmeasure\u7684\u8fc7\u7a0b\u3002</p> <p></p> <p>void onMeasure (int widthMeasureSpec,                  int heightMeasureSpec)</p> <p>\u8fd9\u91cc\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u56de\u8c03\u51fd\u6570 <code>onMeasure</code>. <code>onMeasure</code> \u8fc7\u7a0b\u5c31\u662f\u6839\u636emeasure spec\uff0c\u8bbe\u7f6e\u672cview\u7684\u5927\u5c0f\u7684\u8fc7\u7a0b\u3002 \u6839\u636eAPI\u6587\u6863\uff0c\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u8c03\u7528<code>setMeasuredDimension</code>\u8bbe\u7f6e measured dimension\u3002\u8fd9\u4e5f\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u76ee\u7684\u3002</p> <pre><code>CONTRACT: When overriding this method, you must call setMeasuredDimension(int, int) to store the measured width and height of this view. \n</code></pre> <p>measure spec \u662f\u4e00\u4e2a32\u4f4d\u6574\u5f62\uff0c \u524d2\u4f4d\u8868\u793aspec(\u7528<code>View.MeasureSpec.getMode</code>\u83b7\u53d6)\uff0c\u540e30\u4f4d\u4e3a\u5efa\u8bae\u7684\u5927\u5c0f(<code>View.MeasureSpec.getSize</code>)\u3002</p>"},{"location":"vs/common_ui_partner_vs/#layout","title":"Layout","text":"<p>layout\u57fa\u672c\u5c31\u662f\u4f7f\u7528measure\u8fc7\u7a0b\u7684\u5927\u5c0f\uff0c\u5e03\u5c40\u5404\u4e2achild view\u3002</p> <p></p>"},{"location":"vs/common_ui_partner_vs/#_6","title":"\u6e32\u67d3\u8fc7\u7a0b","text":""},{"location":"vs/common_ui_partner_vs/#flutter","title":"Flutter","text":"<p>Flutter\u7684\u5e03\u5c40\u548c\u6e32\u67d3\u662f\u6709renderObject\u4e3b\u5bfc\u7684\u3002element\u5728flutter\u4e2d\uff0c\u53ea\u8d77\u5230\u4e00\u4e2a\u5efa\u7acbrender tree\u548c\u6807\u5fd7widget\u4f4d\u7f6e\u7684\u4f5c\u7528\u3002</p>"},{"location":"vs/common_ui_partner_vs/#_7","title":"\u5e03\u5c40\u8fc7\u7a0b","text":"<p>Flutter \u5e03\u5c40\u8fc7\u7a0b\u575a\u6301\u4e00\u4e2a\u539f\u5219\uff1achildren\u8d1f\u8d23\u8ba1\u7b97\u81ea\u5df1\u7684\u5927\u5c0f\uff0cparent\u8d1f\u8d23children\u7684\u4f4d\u7f6e\u3002\u6bcf\u4e00\u4e2achildren\u7684\u4f4d\u7f6e\u4fe1\u606f\u5b58\u653e\u5728parentData(<code>BoxParentData</code>)\u4e2d\uff0c\u8fd9\u662f\u4e00\u4e2ainherit widget\u3002</p> <p>\u5bf9\u4e8e2d\u63a7\u4ef6\u6765\u8bf4\uff0c renderBox\u8d1f\u8d23\u5404\u4e2a\u63a7\u4ef6\u7684layout\u8fc7\u7a0b\u3002</p> <p></p>"},{"location":"vs/common_ui_partner_vs/#_8","title":"\u6e32\u67d3\u8fc7\u7a0b","text":"<p>flutter\u4e2d\uff0crenderobject\u8d1f\u8d23\u6e32\u67d3\u3002\u6d89\u53ca\u6e32\u67d3\u7684\u5176\u5b83\u7c7b\u5305\u62ec\uff1a</p> <ul> <li>Canvas: \u5c01\u88c5\u4e86skia\u7684\u7ed8\u5236\u64cd\u4f5c\uff0c\u5b83\u5728API\u6587\u6863\u4e2d\u7684\u5b9a\u4e49\u662f\uff1a</li> </ul> <pre><code>An interface for recording graphical operations.\n</code></pre> <ul> <li>Layer: \u753b\u5e03\u3002\u5305\u62ec\u7ed8\u5236\u4ea7\u7269\u548c\u5bb9\u5668\u7c7b\u4ea7\u7269.</li> <li>PictureLayer: \u7ed8\u5236\u4ea7\u7269\uff0clayer tree\u4e2d\u7684\u53f6\u5b50\u7ed3\u70b9\u3002\u4ea7\u751f\u4e00\u4e2a\u6700\u7ec8\u7684 <code>Picture</code> \u5bf9\u8c61\u3002\u8be5\u5bf9\u8c61\u7528\u4e8e<code>Scene</code> \u7684\u6e32\u67d3\u3002</li> <li>ContainerLayer: \u5bb9\u5668layer\uff0c\u5305\u542b\u591a\u4e2achild layer\u3002</li> <li>Scene: \u6700\u7ec8\u5411\u5c4f\u5e55\u7ed8\u5236\u7684\u4ea7\u7269\u3002<code>Scene objects can be displayed on the screen using the FlutterView.render method.</code></li> </ul>"},{"location":"vs/common_ui_partner_vs/#_9","title":"\u6e32\u67d3\u7c7b\u5173\u7cfb\u56fe","text":""},{"location":"vs/common_ui_partner_vs/#qt","title":"QT","text":"<p>\u5bf9\u4e8eqt\u7684\u5e03\u5c40\u8fc7\u7a0b\u548c\u6e32\u67d3\u8fc7\u7a0b\uff0c\u672a\u77e5\uff0c\u9700\u8981dive deep\u3002</p>"},{"location":"vs/common_ui_partner_vs/#_10","title":"\u591a\u7ebf\u7a0b","text":"\u7c7b\u578b UI\u7ebf\u7a0b \u7ebf\u7a0b\u4fdd\u6d3b \u591a\u7ebf\u7a0b\u6846\u67b6 iOS \u4e3b\u7ebf\u7a0b Runloop <li>Dispatch(GCD)<li>Queue Android \u4e3b\u7ebf\u7a0b Looper <li>Handler<li>AsyncTask Flutter \u4e3bIsolate event loop <li>LoadBalancer QT \u4e3b\u7ebf\u7a0b event loop <li>QThreadPool<li>QtConcurrent <ul> <li>iOS\u7684Runloop\u521b\u5efa\u8fc7\u7a0b:</li> <li>\u4f7f\u7528<code>NSThread</code> \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5728\u7ebf\u7a0b\u51fd\u6570\u6267\u884c</li> <li>RunLoop.current.run()</li> </ul> <p>iOS Threading Programming Guide</p> <ul> <li>Android\u4f7f\u7528Looper\u4f7fthread\u4fdd\u6d3b\u3002\u5b83\u7684\u6bcf\u4e00\u4e2alooper\u90fd\u6709\u4e00\u4e2amessage queue.</li> </ul> <p>\u901a\u8fc7\u7ed9looper\u7ed1\u5b9a\u4e00\u4e2ahandler\uff0c\u53ef\u4ee5\u68c0\u7d22\u5230message queue\u4e2d\u7684\u6d88\u606f\u3002\u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2ahandle\u53d1\u9001\u6307\u5b9a\u7684message\u8fd0\u884c\u5728\u7279\u5b9a\u7684thread\u4e0a\u4e0b\u6587\u3002</p> <p>Example from API:</p> <pre><code>  class LooperThread extends Thread {\n      public Handler mHandler;\n\n      public void run() {\n          Looper.prepare();\n\n          mHandler = new Handler(Looper.myLooper()) {\n              public void handleMessage(Message msg) {\n                  // process incoming messages here\n              }\n          };\n\n          Looper.loop();\n      }\n  }\n</code></pre> <p>looper\u6709\u5f88\u591a\u5f88\u6709\u5e2e\u52a9\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982 <code>public void setMessageLogging (Printer printer)</code>, \u53ef\u4ee5\u6253\u5370\u8be5\u7ebf\u7a0b\u8fd0\u884c\u7684\u65f6\u673a\uff0c\u5305\u62ec\u5904\u7406\u7279\u5b9a\u4efb\u52a1\u4ee5\u53ca\u8fdb\u5165idle\u3002</p> <p>\u5f53Handle\u7ed1\u5b9a\u4e00\u4e2alooper\u540e\uff0c\u5c31\u7b49\u4e8e\u8be5\u7ebf\u7a0b\u7684\u8fd0\u884c\u51fd\u6570\u3002\u53ef\u4ee5post runnable\u62a4\u7740message\u7ed9\u8fd9\u4e2ahandle\u5904\u7406\u3002\u8fd9\u4e9brunnable\u5c06\u8fd0\u884c\u5728\u8fd9\u4e2a\u7ebf\u7a0b\u4e0a\u4e0b\u6587\uff0c\u540c\u65f6\uff0cmessage\u4e5f\u4f1a\u6d3e\u53d1\u7ed9handle\u7684\u5904\u7406\u56de\u8c03\u3002</p> <ul> <li>Flutter\u4e2d\u6ca1\u6709\u7ebf\u7a0b\u7684\u6982\u5ff5\uff0c\u5374\u6709 isloate\u7684\u6982\u5ff5\u3002\u6bcf\u4e00\u4e2aisloate\u4e2d\u5185\u5b58\u4e0d\u5171\u4eab\u3002\u5176UI\u8fd0\u884c\u5728UI isloate\u4e2d\u3002</li> </ul> <p>isloate\u7684\u901a\u4fe1\u901a\u8fc7port\u8fdb\u884c\u3002</p> <pre><code>All Dart code runs in an isolate, and code can access classes and values only from the same isolate. Different isolates can communicate by sending values through ports (see ReceivePort, SendPort).\n</code></pre> <p>\u800c\u7ecf\u5e38\u4f7f\u7528future\u548casync\u53ea\u662f\u5bf9isloate\u7684\u5207\u7247\u3002</p> <ul> <li>QT\u7684UI\u4e5f\u8fd0\u884c\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u3002\u5b83\u7684\u6bcf\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90fd\u6709\u81ea\u5df1\u7684\u8fd0\u884c\u7ebf\u7a0b\u3002\u5728\u5bf9\u8c61\u88ab\u751f\u6210\u65f6\uff0c\u5982\u679c\u6709parent\uff0c\u5219\u4f1a\u7ed1\u5b9aparent\u7684\u7ebf\u7a0b\u3002</li> </ul> <p>\u5982\u679c\u8981\u60f3\u4e00\u4e2a\u5bf9\u8c61\u8fd0\u884c\u5728\u81ea\u7ebf\u7a0b\uff0c\u9996\u5148\u8fd9\u4e2a\u5bf9\u8c61\u6ca1\u6709parent\uff0c\u6216\u8005\u5bf9\u8c61\u521d\u59cb\u5316\u5728\u5b50\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u3002</p> <p>\u5982\u679c\u5bf9\u8c61\u6ca1\u6709parent\uff0c\u53ef\u4ee5\u901a\u8fc7moveToThread\u5207\u6362\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u3002</p> <p>\u8fd9\u662f\u7531\u4e8eqt\u7684\u4fe1\u53f7\u69fd\u673a\u5236\u3002\u4e3a\u4e86\u4f7f\u69fd\u51fd\u6570\u5fc5\u987b\u8fd0\u884c\u5728\u6307\u5b9a\u7684\u7ebf\u7a0b\u4e0a\uff0c\u4ee5\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u800c\u8bbe\u8ba1\u7684\u3002</p>"},{"location":"vs/common_ui_partner_vs/#_11","title":"\u4e8b\u4ef6\u7684\u5206\u53d1","text":"<p>\u8fd9\u91cc\u7684\u4e8b\u4ef6\u5206\u53d1\uff0c\u4e3b\u8981\u5305\u62ec\u7528\u6237\u70b9\u51fb\u4e8b\u4ef6\uff0c\u5b83\u662f\u5982\u4f55\u4f20\u64ad\u70b9\u51fbevent\u5230\u7279\u5b9a\u7684UI\u63a7\u4ef6\u4e0a\u7684\u3002</p>"},{"location":"vs/common_ui_partner_vs/#ioseventuievent","title":"iOS\u7684event(UIEvent)\u5206\u53d1","text":"<ul> <li>\u901a\u8fc7 <code>hitTest</code> \u67e5\u627e\u54cd\u5e94\u76ee\u6807\u3002<code>hitTest</code> \u8fd4\u56de\u7684view\u5c06\u9996\u5148\u5904\u7406\u8fd9\u4e2a\u54cd\u5e94\u4e8b\u4ef6\u3002</li> </ul> <pre><code>- (UIView *)hitTest:(CGPoint)point \n          withEvent:(UIEvent *)event;\n</code></pre> <ul> <li>\u7cfb\u7edf\u5c06touch event\u7b49\uff0c\u76f4\u63a5\u4f20\u9012\u7ed9<code>hitTest</code> \u8fd4\u56de\u7684 <code>view</code>, \u8c03\u7528\u8be5view\u7684<code>touchesBegan</code> \u65b9\u6cd5\u3002</li> </ul> <pre><code>- (void)touchesBegan:(NSSet&lt;UITouch *&gt; *)touches \n           withEvent:(UIEvent *)event;\n\nUIKit calls this method when a new touch is detected in a view or window. Many UIKit classes override this method and use it to handle the corresponding touch events. The default implementation of this method forwards the message up the responder chain. When creating your own subclasses, call super to forward any events that you do not handle yourself. For example,\n</code></pre> <p>\u5b98\u65b9API\u8bf4\u660e\uff0c\u901a\u8fc7\u8c03\u7528<code>super</code> -&gt; <code>touchesBegan</code>,\u4f1a\u5c06\u4e8b\u4ef6\u6309\u7167response chain\u5411\u4e0a\u4f20\u9012\u3002</p> <pre><code>If you override this method without calling super (a common use pattern), you must also override the other methods for handling touch events, even if your implementations do nothing.\n</code></pre> <p>\u5982\u679c\u4f60override\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4e14\u6ca1\u6709\u8c03\u7528super\u65b9\u6cd5\uff0c\u5219\u5e94\u8be5override\u5176\u5b83\u7684\u548ctouch\u76f8\u5173\u7684\u65b9\u6cd5\u3002</p>"},{"location":"vs/common_ui_partner_vs/#androidmotionevent","title":"Android\u7684\u4e8b\u4ef6(MotionEvent)\u5206\u53d1","text":"<p>Android\u7684\u4e8b\u4ef6\u5206\u53d1\u8981\u6bd4iOS\u590d\u6742\u4e00\u70b9\u3002\u56e0\u4e3aandroid\u53c2\u4e0e\u4e8b\u4ef6\u5206\u53d1\u7684\u89d2\u8272\u6bd4iOS\u7684\u8981\u591a\u3002</p> <p>iOS\u4e2d\uff0c\u53ea\u6709uiview\u548cUIresponse\u53c2\u4e0e\uff08\u5176\u5b9eUIview\u4e5f\u662f UIresonse\u7684\u6d3e\u751f\u7c7b\uff09\u3002\u4f46Android\u5374\u6709 <code>Activity</code>\uff0c<code>DecoorView</code> , <code>ViewGroup</code> , <code>View</code> \u53c2\u4e0e\u3002</p> <p>Android\u4e2d\uff0c\u4e8b\u4ef6\u5206\u53d1\u5305\u62ec\uff1a\u5206\u53d1\uff08dispatch\uff09\uff0c\u62e6\u622a\uff08onInterceptTouchEvent\uff09\uff0c\u5904\u7406(onTouch)\u51e0\u4e2a\u8fc7\u7a0b\u3002</p> <p></p>"},{"location":"vs/common_ui_partner_vs/#flutter-event","title":"Flutter event \u5206\u53d1","text":"<p>flutter\u7684event\u6709\u70b9\u50cfiOS\u3002\u5b83\u4e5f\u5305\u542b\u4e86\u4e00\u4e2a<code>hitTest</code>\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e0d\u4ec5\u4ec5\u51b3\u5b9a\u662f\u5426\u63a5\u53d7touch event\uff0c\u800c\u4e14\u5efa\u7acb\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u54cd\u5e94\u8fde\u3002</p> <pre><code>bool hitTest(\nBoxHitTestResult result, {\nrequired Offset position,\n})\n\nDetermines the set of render objects located at the given position.\n\nReturns true, and adds any render objects that contain the point to the given hit test result, if this render object or one of its descendants absorbs the hit (preventing objects below this one from being hit). Returns false if the hit can continue to other objects below this one.\n</code></pre> <p>\u6b63\u5982API\u6587\u6863\u63cf\u8ff0\u90a3\u6837\uff0chitTest\u8fd4\u56detrue\u5219\u4e0d\u4f1a\u8fdb\u4e00\u6b65\u4f20\u9012hitTest\u3002\u5bf9\u4e8e\u5b50render box\u6765\u8bf4\uff0c\u4f1a\u628a\u81ea\u8eab\u63d2\u5165\u5230HitTestResult\u7684\u524d\u9762\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f1a\u9996\u5148\u8fdb\u884c<code>handleEvent</code>.</p> <p>\u6839\u636e\u6587\u6863\uff0c\u6240\u6709\u52a0\u5165 <code>HitTestResult</code>,\u90fd\u4f1a\u88ab\u8c03\u7528<code>handleEvent</code>. (\u8fd9\u91cc\u6211\u6709\u4e9b\u7591\u60d1\uff0c\u5982\u679c A &gt; B, B \u54cd\u5e94\u4e8b\u4ef6\u540e\uff0cA \u662f\u5426\u9700\u8981\u54cd\u5e94\u4e8b\u4ef6\uff1f\u9700\u8981\u770b\u6e90\u7801\u8fdb\u4e00\u6b65\u786e\u8ba4\u3002flutter\u597d\u50cf\u6ca1\u6709\u4e8b\u4ef6\u6d88\u8d39\u8fd9\u4e48\u4e00\u4e2a\u6982\u5ff5\u3002iOS\u548cAndroid\u5f53 touch event\u8fd4\u56defalse\u65f6\uff0c\u8ba4\u4e3a\u4e8b\u4ef6\u6ca1\u6709\u88ab\u6d88\u8d39\uff0c\u4f1a\u6709\u8fdb\u4e00\u6b65\u5206\u53d1\u7684\u60c5\u51b5\u3002iOS\u4f1a\u4f9d\u8d56next response\u8fdb\u4e00\u6b65\u5904\u7406\u3002Android\u4e5f\u4f1a\u7531\u4e0a\u4e00\u7ea7\u7684\u8fdb\u884c\u6d88\u8d39\u3002 )</p> <p>\u4ece\u76ee\u524d\u7684\u6587\u6863\u4e0a\u6765\u770b\uff0c\u4e8b\u4ef6\u7a7f\u900f\uff0c\u62e6\u622a\u7b49\uff0c\u90fd\u9700\u8981\u4f9d\u9760 <code>hitTest</code> \u6765\u5b9e\u73b0\u3002</p>"},{"location":"vs/common_ui_partner_vs/#qt_1","title":"QT \u4e8b\u4ef6\u5206\u53d1","text":"<p>QT\u7684\u4e8b\u4ef6\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u7cfb\u7edf\u4e8b\u4ef6\uff0c\u6bd4\u5982\u952e\u76d8/\u9f20\u6807\u7b49\u3002\u53e6\u4e00\u79cd\u662f\u4fe1\u53f7\u69fd\u3002qt\u7684\u4e8b\u4ef6\u5206\u53d1\u6bd4\u8f83\u5947\u602a\uff0c\u6ca1\u6709\u6587\u6863\u8bf4\u660eapplication\u662f\u5982\u4f55\u627e\u5230\u9700\u8981\u5904\u7406\u7684widget\u7684(\u6211\u63a8\u6d4b\u662ffocused widget)\u3002\u4ece\u6587\u6863\u4e0a\u770b\uff0capplication\u6536\u5230\u4e8b\u4ef6\u540e\uff0c\u4f1a\u4ea4\u7ed9qobject\u53bb\u5904\u7406\u3002</p> <p></p>"},{"location":"vs/common_ui_partner_vs/#_12","title":"\u5185\u5b58\u7ba1\u7406","text":"\u7c7b\u578b \u5783\u573e\u56de\u6536\u673a\u5236 \u63cf\u8ff0 iOS \u5f15\u7528\u8ba1\u6570 Android \u5783\u573e\u56de\u6536 <li>\u5206\u4ee3\u6807\u8bb0<li>\u5e76\u53d1\u590d\u5236 Flutter \u5783\u573e\u56de\u6536 <li>\u5206\u4ee3\u6807\u8bb0<li>\u5e76\u884c\u6e05\u7406 QT \u5f15\u7528\u8ba1\u6570 <p>\u5185\u5b58\u7ba1\u7406\u8fd9\u5757\uff0ciOS\u548cqt\u90fd\u662f\u7528c\u5b9e\u73b0\u7684\uff0c\u5f15\u7528\u8ba1\u6570\u3002 \u800cAndroid/flutter\u7b49\uff0c\u6709\u5783\u573e\u56de\u6536\u7b97\u6cd5\u652f\u6301\u3002\u76ee\u524d\u5927\u591a\u91c7\u7528\u7684\u4e24\u4ee3\u7ba1\u7406\uff0c\u5e76\u884c\u590d\u5236/\u6807\u8bb0\u6e05\u9664\u8fd9\u6837\u7684\u7b97\u6cd5\u3002</p>"},{"location":"vs/common_ui_partner_vs/#_13","title":"\u603b\u7ed3","text":"<p>\u4ece\u4e0a\u9762\u51e0\u4e2a\u6bd4\u8f83\u53ef\u4ee5\u770b\u51fa\uff0c\u76ee\u524dUI\u7ba1\u7406\u65b9\u6848\u90fd\u5177\u6709\u96f7\u540c\u6027\uff0c\u53ef\u4ee5\u6bd4\u8f83\u5b66\u4e60\u3002\u800c\u4e00\u4e9b\u7ec6\u8282\u548c\u4f9d\u8d56\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5219\u5bfc\u81f4\u5b9e\u73b0\u4e0a\u6709\u4e00\u4e9b\u5dee\u8ddd\u3002</p> <p>\u6240\u6709\u7684UI\u5e93\u9700\u8981\u5904\u7406\u90fd\u5305\u62ec\u5185\u5b58\u7ba1\u7406\uff0c\u7ebf\u7a0b\u8c03\u5ea6\u3002\u800c\u5185\u5b58\u7ba1\u7406\u4e0a\uff0cc\u7cfb\u7684\u4e00\u822c\u91c7\u7528\u5f15\u7528\u8ba1\u6570\uff0c\u5176\u5b83\u5219\u91c7\u7528\u5783\u573e\u56de\u6536\u3002\u5bf9\u4e8e\u5783\u573e\u56de\u6536\u6765\u8bf4\uff0cgoogle\u7cfb\u7684Android/flutter\u751a\u81f3\u4e8ego\uff0c\u90fd\u6709\u76f8\u4f3c\u5904\uff08\u5bf9\u4e8e\u8ffd\u6c42\u7ec6\u8282\u7684\u540c\u5b66\uff0c\u80af\u5b9a\u80fd\u770b\u51fa\u4ed6\u4eec\u5728\u5b9e\u73b0\u4e0a\u7684\u4e0d\u540c\uff0c\u4f46\u601d\u60f3\u4e0a\u662f\u6709\u5171\u540c\u4e4b\u5904\uff09\u3002</p> <p>\u7ebf\u7a0b\u8c03\u5ea6\uff0c\u57fa\u672c\u90fd\u91c7\u7528\u4e86\u4f7f\u7528looper/queue\u8fd9\u79cd\u4fdd\u6d3b\u673a\u5236\u3002\u800ciOS\u3001Android\u3001qt\u5206\u522b\u6709\u81ea\u5df1\u7684\u7ebf\u7a0b\u6c60\u3002</p> <p>\u4e8b\u4ef6\u5904\u7406\u4e0a\uff0c\u4e3a\u4e86\u627e\u5230\u80fd\u591f\u5904\u7406\u4e8b\u4ef6\u7684\u63a7\u4ef6\uff0ciOS/Android/flutter\u5206\u522b\u91c7\u7528\u4e86\u4e0d\u540c\u7684\u673a\u5236\u3002\u5bf9\u4e8eAndroid/qt\u6765\u8bf4\uff0c\u5206\u522b\u591a\u4e86\u4e00\u4e2a\u62e6\u622a\u5668\uff08intercept/filter\uff09\u3002</p> <p>\u5185\u5b58\uff0c\u7ebf\u7a0b\uff0c\u4e8b\u4ef6\u5206\u53d1\uff0c\u5e03\u5c40\u548c\u6e32\u67d3\uff0c\u662f\u6211\u4eec\u5b66\u4e60\u548c\u638c\u63e1\u8fd9\u4e9b\u5e93\u7684\u76ee\u6807\uff0c\u4e5f\u662f\u6211\u4eec\u6df1\u5165\u4e86\u89e3\u7684\u7a97\u53e3\u3002</p>"}]}